<?xml version="1.0" encoding="UTF-8"?>
<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，
你会看到log4j2内部各种详细输出。可以设置成OFF(关闭)或Error(只输出错误信息)

# 日志级别：Trace、Debug、Info、Warn、Error、Fatal
-->
<Configuration status="Error">
    <Name value="xmlConfig"/>
    <!-- 日志文件目录和压缩文件目录配置 -->
    <Properties>
        <Property name="filePath">logs</Property>
        <Property name="fileGzPath">logs/7z</Property>
        <Property name="kafkaPath">${spring.cloud.stream.kafka.binder.brokers}</Property>
        <Property name="applicationName">${spring.application.name}</Property>
    </Properties>
    <!-- <ThresholdFilter>
        <Level value="debug">
    </ThresholdFilter> -->
    <!-- <monitorInterval>10</monitorInterval> -->

    <Appenders>
        <!-- 输出控制台日志的配置 -->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出日志的格式 -->
            <!-- %t当前线程名称，（%F文件名，%M方法名，%L行号）=%l -->
            <PatternLayout pattern="${applicationName} %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>

        <!-- 打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingRandomAccessFile name="DebugFile" fileName="${filePath}/application-info.log" immediateFlush="false" filePattern="${fileGzPath}/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.application-info.gz">
            <!-- [%d][%t][%p][%c:%L] %m%n -->
            <PatternLayout pattern="${applicationName} %d{yyyy-MM-dd 'at' HH:mm:ss z} [%t] %-5level %logger{36} %L %M - %msg%xEx%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50 MB"/>
            </Policies>
            <Filters>
                <!-- 只记录info和warn级别信息 -->
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="50"/>
        </RollingRandomAccessFile>

        <!-- 存储所有error信息 -->
        <RollingRandomAccessFile name="ErrorFile" fileName="${filePath}/application-error.log" immediateFlush="false" filePattern="${fileGzPath}/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.application-error.gz">
            <PatternLayout pattern="${applicationName} %d{yyyy-MM-dd 'at' HH:mm:ss z} [%t] %-5level %logger{36} %L %M - %msg%xEx%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50 MB"/>
            </Policies>
            <Filters>
                <!-- 只记录error级别信息 -->
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="50"/>
        </RollingRandomAccessFile>

        <Kafka name="Kafka" topic="log-test" ignoreExceptions="false">
            <PatternLayout pattern="${applicationName} %date %message"/>
            <Property name="bootstrap.servers">${kafkaPath}</Property>
            <Property name="max.block.ms">2000</Property>
        </Kafka>

        <!-- failover 机制-->
        <Failover name="Failover" primary="Kafka" retryIntervalSeconds="600">
            <Failovers>
                <AppenderRef ref="DebugFile"/>
            </Failovers>
        </Failover>
    </Appenders>

    <!-- 全局配置，默认所有的Logger都继承此配置 -->
    <Loggers>
        <!-- # 一般为warn或error，表示默认只输出该级别之上（如Fatal）的日志 -->
        <!-- AsyncRoot - 异步记录日志 - 需要LMAX Disruptor的支持; 使用kafka尽量使用异步记录 -->
        <!-- <AsyncRoot level="info" additivity="false"> -->
        <!-- <AsyncLogger name="kafkaLogger" level="INFO" additivity="false">
            <appender-ref ref="Failover"/>
            </AsyncLogger> -->
        <!-- </AsyncRoot> -->

        <Root level="debug" additivity="false">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="DebugFile"/>
            <AppenderRef ref="ErrorFile"/>
        </Root>
    </Loggers>
</Configuration>