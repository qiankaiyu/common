// 该配置只是作为临时配置，等到common下的代码都移走后，使用common-backup.gradle
plugins {
    id 'org.springframework.boot' version '2.5.0-M3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "io.freefair.lombok" version "5.3.3.3"
    id "groovy"
}

group = 'com.chuck'
version = '0.0.1'
sourceCompatibility = '1.8'

// excludes {
// // all*.exclude module: 'spring-boot-starter-logging'
// // all*.exclude module: 'logback-classic'
// // all*.exclude module: 'log4j-over-slf4j'
// // all*.exclude module: 'org.springframework.boot:spring-boot-starter-tomcat'
//     exclude module: 'spring-boot-starter-logging'
// }

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework:spring-context'
    
    // runtimeOnly 'mysql:mysql-connector-java'
//    implementation 'mysql:mysql-connector-java'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // spock test
//    implementation 'org.hamcrest:hamcrest:2.2'
//    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
//    testImplementation 'org.spockframework:spock-spring:2.0-M4-groovy-3.0'
    
    // log4j 2
//    implementation 'org.apache.logging.log4j:log4j-api'
//    implementation 'org.apache.logging.log4j:log4j-core'
    
    // integrationTestImplementation platform("org.spockframework:spock-bom:2.0-M4-groovy-3.0")
    // integrationTestImplementation 'org.spockframework:spock-core'
    
    // functionalTestImplementation platform("org.spockframework:spock-bom:2.0-M4-groovy-3.0")
    // functionalTestImplementation 'org.spockframework:spock-core'

    // compile fileTree(dir:'build/libs',include:['*.jar']) 表示编译时依赖本地的jar

}


tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

task copyFile (type: Copy){
    from("$buildDir/outputs/apk"){
        exclude '**/*unsigned.apk'
    }
    into '../apks'
}

task cleanBuild (type:Delete){
	delete rootProject.buildDir
}